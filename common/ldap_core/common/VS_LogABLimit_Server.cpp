#include "VS_LogABLimit_Server.h"
#include "../../std/debuglog/VS_Debug.h"

#define DEBUG_CURRENT_MODULE VS_DM_DBSTOR

void VS_LogABLimit_Server::LimitByGroupCustomContacts(const std::string& owner, const unsigned long before_size, const unsigned long add_items, const unsigned long limit_value, const std::string& gid_from_group)
{
	dstream0 << "Error: autogenerated address book of user " << owner << " has " << before_size << " contacts."
		" Skipping " << add_items << " custom contacts of group " << gid_from_group << " (total limit:" << limit_value << ")\n";
	m_IsErrorShown = true;
}

void VS_LogABLimit_Server::LimitByGroupAllUsers(const std::string& owner, const unsigned long before_size, const unsigned long add_items, const unsigned long limit_value, const std::string& gid_from_group)
{
	dstream0 << "Error: autogenerated address book of user " << owner << " has " << before_size << " contacts."
		" Cannot show all server users from group:" << gid_from_group << " AB (total:" << add_items << " users, limit:" << limit_value << " entries)\n";
	m_IsErrorShown = true;
}

void VS_LogABLimit_Server::LimitByGroup(const std::string& owner, const unsigned long before_size, const unsigned long add_items, const unsigned long limit_value, const std::string& gid_from_group, const std::string& gid_add_group)
{
	dstream0 << "Error: autogenerated address book of user " << owner << " has " << before_size << " contacts."
		" Not adding group " << gid_add_group << " users from group:" << gid_from_group << " AB: "
		"it has " << add_items << " contacts (total limit:" << limit_value << ")\n",
	m_IsErrorShown = true;
}

void VS_LogABLimit_Server::LimitByUser(const std::string& owner, const unsigned long limit_value)
{
	dprint0("Error: user %s address book limited to %ld contacts\n",
		owner.c_str(), limit_value);
	m_IsErrorShown = true;
}

void VS_LogABLimit_Server::WarnByGroup(const std::string& owner, const unsigned long before_size, const unsigned long limit_value)
{
	dprint1("Warning: autogenerated address book of user %s has %ld contacts (limit:%ld)\n",
		owner.c_str(), before_size, limit_value);
}

void VS_LogABLimit_Server::WarnByUser(const std::string& owner, const unsigned long limit_value)
{
	dprint1("Warning: user %s has more than %ld contacts at his own address book\n",
		owner.c_str(), limit_value);
}