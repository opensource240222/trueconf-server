#once

{
	.ProjectName = 'AddressBookCache'
	^AllProjects + .ProjectName

	.ProjectPath = '$RepoPath_TCCommon$/$ProjectName$'
	.TargetName = '$ProjectName$$LIBSuffix$'

	.ExtraIncludes
		+ '$dxsdk_dir$/include'
		+ '$qtdir$/include'
	.ExtraDefinitions
		+ '_ZOOMCALL_'
		+ '_VPX_INCLUDED_'
	.SourcePath = .ProjectPath
	.SourceFiles
		+ '$RepoPath_TCCommon$/Transcoder/AppDependedImp.cpp'

	.ExternalLibraries_Use
		+ 'webrtc'
		+ 'boost'
	.ProjectConfigs = {}

	.ExtraLibrarianOptions = ''
	.ExtraLibrarianOptions_Debug = ''
	.ExtraLibrarianOptions_Release = ''
	// TODO: Don't bundle these libs
#if __WINDOWS__
	.ExtraLibrarianOptions
		+ ' Strmiids.lib'
#endif

	ForEach(.Cfg in .Configs)
	{
		Using(.Cfg)
#include "../fbuild/update_config.bff"

#include "../fbuild/gen_def_objlist.bff"
		Alias('Compile-$ProjectName$-$Toolchain$-$Platform$-$Config$-$Trait$') { .Targets = .LibrarianAdditionalInputs }

		Library('$ProjectName$-$Toolchain$-$Platform$-$Config$-$Trait$-LIB')
		{
			.LibrarianAdditionalInputs
				+ 'acs-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'Audio-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'BaseClasses-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'CheckSrv-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'Client-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'ClientInterface-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'IppLib2-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'LibTorrent-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'MediaParserLib-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'SecureLib-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'SIPParserLib-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'std-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'streams-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'STUNClientLib-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'STUNParserLib-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'Transcoder-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'Transport-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'UPnPLib-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'Video-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'WinFirewallManager-$Toolchain$-$Platform$-$Config$-$Trait$'
			.LibrarianOptions
				+ .ExtraLibrarianOptions
				+ ."ExtraLibrarianOptions_$Config$"
				+ ."openssl_LinkerOptions_$Toolchain$_$Platform$_$Config$"
		}
		Alias('$ProjectName$-$Toolchain$-$Platform$-$Config$-$Trait$') { .Targets = '$ProjectName$-$Toolchain$-$Platform$-$Config$-$Trait$-LIB' }
	}

#include "../fbuild/gen_project_aliases.bff"

	.ProjectGuid = '{0A95AC3E-0CBA-4FDC-B9D1-B4A4AF7BFB44}'
#include "../fbuild/gen_ide_project.bff"
}
