#once

{
	.ProjectName = 'MDNS_Responder'
	^AllProjects + .ProjectName

	.ProjectPath = '$RepoPath_TCCommon$/$ProjectName$'
	.TargetName = '$ProjectName$$EXESuffix$'

	.SourcePath = .ProjectPath

	.ExternalLibraries_Use
		+ 'boost'
	.ExternalLibraries_Link
		+ 'cppdb'
		+ 'boost'
	.ProjectConfigs = {}

#if __WINDOWS__
	.ExtraLinkerOptions
		+ ' Advapi32.lib'
		+ ' gdi32.lib'
#endif

	ForEach(.Cfg in .Configs)
	{
		Using(.Cfg)
#include "../fbuild/update_config.bff"

#include "../fbuild/gen_def_objlist.bff"
		Alias('Compile-$ProjectName$-$Toolchain$-$Platform$-$Config$-$Trait$') {.Targets = .LibrarianAdditionalInputs}

		Executable('$ProjectName$-$Toolchain$-$Platform$-$Config$-$Trait$-EXE')
		{
			.Libraries
				+ 'std-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'std-generic-$Toolchain$-$Platform$-$Config$-$Trait$'
#if __WINDOWS__
				+ 'Server-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'acs-$Toolchain$-$Platform$-$Config$-$Trait$'
#endif
				+ 'acs_v2-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'SecureLib-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'net-$Toolchain$-$Platform$-$Config$-$Trait$'

			.LinkerOptions
				+ .LinkerOptionsEnd
			Using(."LinkerStamp_$Config$")
			.LinkerStampExeArgs + ' "$LinkerOutput$"'
		}
		Alias('$ProjectName$-$Toolchain$-$Platform$-$Config$-$Trait$') {.Targets = '$ProjectName$-$Toolchain$-$Platform$-$Config$-$Trait$-EXE'}
	}

#include "../fbuild/gen_project_aliases.bff"
#include "../fbuild/gen_ide_project.bff"
}
