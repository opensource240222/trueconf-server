#!/bin/bash

usage()
{
	cat <<EOF >&2
Usage: ${0##*/} HEADER [VARIANT:FILE]...
Creates HEADER file which will includes appropriate FILE based on currect platform and compiler.
FILEs are copied under unique names to the directory in which HEADER is located.
VARIANT specifies configuration in which FILE can be used, it can either empty or be one of:
    win-x86-vc120    Windows 32-bit MSVS 2013
    win-x86-vc140    Windows 32-bit MSVS 2015/2017
    win-x86_64-vc120 Windows 64-bit MSVS 2013
    win-x86_64-vc140 Windows 64-bit MSVS 2015/2017
    win-x86          Windows 32-bit
    win-x86_64       Windows 64-bit
    win              Windows
    linux-x86        Linux 32-bit
    linux-x86_64     Linux 64-bit
    linux            Linux
If VARIANT is empty then FILE can be used for all configurations.
EOF
	exit ${1:-0}
}

[[ "$1" == --help ]] && usage

[[ $# -ge 1 ]] || usage 1
out_fn="${1##*/}"
hdrdir="${1%$out_fn}"
hdrname="${out_fn%.*}"
hdrext="${out_fn#$hdrname}"
shift

v_win_x86_vc120=
v_win_x86_vc140=
v_win_x86_64_vc120=
v_win_x86_64_vc140=
v_win_x86=
v_win_x86_64=
v_win=
v_linux_x86=
v_linux_x86_64=
v_linux=
while [[ $# -gt 0 ]]; do
	case "$1" in
		win-x86-vc120:*) v_win_x86_vc120="${1#*:}" ;;
		win-x86-vc140:*) v_win_x86_vc140="${1#*:}" ;;
		win-x86_64-vc120:*) v_win_x86_64_vc120="${1#*:}" ;;
		win-x86_64-vc140:*) v_win_x86_64_vc140="${1#*:}" ;;
		win-x86:*) v_win_x86="${1#*:}" ;;
		win-x86_64:*) v_win_x86_64="${1#*:}" ;;
		win:*) v_win="${1#*:}" ;;
		linux-x86:*) v_linux_x86="${1#*:}" ;;
		linux-x86_64:*) v_linux_x86_64="${1#*:}" ;;
		linux:*) v_linux="${1#*:}" ;;
		:*)
			v_win="${1#*:}"
			v_linux="${1#*:}"
			;;
		*)
			echo "Invalid argument: \"$1\"" >&2
			usage 1
			;;
	esac
	shift
done

#TODO: Add file deduplication:
#  For example, if files pointed by v_win_x86_vc120 and v_win_x86_vc140 have
#  identical contents then set v_win_x86 to any of them and reset
#  v_win_x86_vc120 and v_win_x86_vc140.

for variant in win-x86-vc120 win-x86-vc140 win-x86_64-vc120 win-x86_64-vc140 win-x86 win-x86_64 win-vc120 win-vc140 win linux-x86 linux-x86_64 linux; do
	v="v_${variant//-/_}"
	if [[ -n "${!v}" ]]; then
		cp -v -- "${!v}" "${hdrdir}${hdrname}-${variant}${hdrext}"
	fi
done

get_include()
{
	v3="v_$1_$2_$3"
	v2="v_$1_$2"
	v1="v_$1"
	if [[ -n "${!v3}" ]]; then
		echo "include <${hdrdir}${hdrname}-$1-$2-$3${hdrext}>"
	elif [[ -n "${!v2}" ]]; then
		echo "include <${hdrdir}${hdrname}-$1-$2${hdrext}>"
	elif [[ -n "${!v1}" ]]; then
		echo "include <${hdrdir}${hdrname}-$1${hdrext}>"
	else
		echo "error \"Unsupported configuration\""
	fi
}

cat <<EOF > "${hdrdir}${hdrname}${hdrext}"
/* Generated by gen_dispatch_header.sh */
#if defined(_WIN32)
#	if defined(_M_IX86)
#		if defined(_MSC_VER) && _MSC_VER >= 1800 && _MSC_VER < 1900
#			$(get_include win x86 vc120)
#		elif defined(_MSC_VER) && _MSC_VER >= 1900 && _MSC_VER < 2000
#			$(get_include win x86 vc140)
#		else
#			$(get_include win x86)
#		endif
#	elif defined(_M_X64)
#		if defined(_MSC_VER) && _MSC_VER >= 1800 && _MSC_VER < 1900
#			$(get_include win x86_64 vc120)
#		elif defined(_MSC_VER) && _MSC_VER >= 1900 && _MSC_VER < 2000
#			$(get_include win x86_64 vc140)
#		else
#			$(get_include win x86_64)
#		endif
#	else
#		$(get_include win)
#	endif
#elif defined (__linux__)
#	if defined(__i386)
#		$(get_include linux x86)
#	elif defined(__amd64)
#		$(get_include linux x86_64)
#	else
#		$(get_include linux)
#	endif
#else
#	error "Unknown platform"
#endif
EOF
echo "Created \`${hdrdir}${hdrname}${hdrext}'"
