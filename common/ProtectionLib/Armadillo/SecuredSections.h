
#if defined(__BORLANDC__)
	/* These definitions provided by Dr. Todd Brennan, 04Oct2002 */
	#define SECUREBEGIN     _asm {db 0xEB; db 0x03; db 0xD6; db 0xD6; db 0x00;}
	#define SECUREEND       _asm {db 0xEB; db 0x03; db 0xD6; db 0xD6; db 0xFF;}
	#define SECUREBEGIN_A_FULL   _asm {db 0xEB; db 0x03; db 0xD6; db 0xD6; db 0x01;}
	#define SECUREEND_A_FULL     _asm {db 0xEB; db 0x03; db 0xD6; db 0xD6; db 0xFF;}
	#define SECUREBEGIN_B_GUEST   _asm {db 0xEB; db 0x03; db 0xD6; db 0xD6; db 0x02;}
	#define SECUREEND_B_GUEST     _asm {db 0xEB; db 0x03; db 0xD6; db 0xD6; db 0xFF;}
	#define SECUREBEGIN_C_LDAP   _asm {db 0xEB; db 0x03; db 0xD6; db 0xD6; db 0x03;}
	#define SECUREEND_C_LDAP     _asm {db 0xEB; db 0x03; db 0xD6; db 0xD6; db 0xFF;}
	#define SECUREBEGIN_D_ROLE   _asm {db 0xEB; db 0x03; db 0xD6; db 0xD6; db 0x04;}
	#define SECUREEND_D_ROLE     _asm {db 0xEB; db 0x03; db 0xD6; db 0xD6; db 0xFF;}
	#define SECUREBEGIN_E_ENTERPRISE   _asm {db 0xEB; db 0x03; db 0xD6; db 0xD6; db 0x05;}
	#define SECUREEND_E_ENTERPRISE     _asm {db 0xEB; db 0x03; db 0xD6; db 0xD6; db 0xFF;}
	#define SECUREBEGIN_F_MGATEWAY   _asm {db 0xEB; db 0x03; db 0xD6; db 0xD6; db 0x06;}
	#define SECUREEND_F_MGATEWAY     _asm {db 0xEB; db 0x03; db 0xD6; db 0xD6; db 0xFF;}
	#define SECUREBEGIN_G_WEBRTC   _asm {db 0xEB; db 0x03; db 0xD6; db 0xD6; db 0x07;}
	#define SECUREEND_G_WEBRTC     _asm {db 0xEB; db 0x03; db 0xD6; db 0xD6; db 0xFF;}
	#define SECUREBEGIN_H   _asm {db 0xEB; db 0x03; db 0xD6; db 0xD6; db 0x08;}
	#define SECUREEND_H     _asm {db 0xEB; db 0x03; db 0xD6; db 0xD6; db 0xFF;}
	#define SECUREBEGIN_I   _asm {db 0xEB; db 0x03; db 0xD6; db 0xD6; db 0x09;}
	#define SECUREEND_I     _asm {db 0xEB; db 0x03; db 0xD6; db 0xD6; db 0xFF;}
	#define SECUREBEGIN_J   _asm {db 0xEB; db 0x03; db 0xD6; db 0xD6; db 0x0A;}
	#define SECUREEND_J     _asm {db 0xEB; db 0x03; db 0xD6; db 0xD6; db 0xFF;}
	#define SECUREBEGIN_K   _asm {db 0xEB; db 0x03; db 0xD6; db 0xD6; db 0x0B;}
	#define SECUREEND_K     _asm {db 0xEB; db 0x03; db 0xD6; db 0xD6; db 0xFF;}
	#define NANOBEGIN       _asm {db 0xEB; db 0x03; db 0xD6; db 0xD7; db 0x01;}
	#define NANOEND         _asm {db 0xEB; db 0x03; db 0xD6; db 0xD7; db 0x00;}

	/* The former definitions for Borland C++ Builder, if anyone needs them. */
	/*
	#define SECUREBEGIN   __emit__ (0xEB,0x03,0xD6,0xD6,0x00);
	#define SECUREEND     __emit__ (0xEB,0x03,0xD6,0xD6,0xFF);
	#define SECUREBEGIN_A_FULL __emit__ (0xEB,0x03,0xD6,0xD6,0x01);
	#define SECUREEND_A_FULL   __emit__ (0xEB,0x03,0xD6,0xD6,0xFF);
	#define SECUREBEGIN_B_GUEST __emit__ (0xEB,0x03,0xD6,0xD6,0x02);
	#define SECUREEND_B_GUEST   __emit__ (0xEB,0x03,0xD6,0xD6,0xFF);
	#define SECUREBEGIN_C_LDAP __emit__ (0xEB,0x03,0xD6,0xD6,0x03);
	#define SECUREEND_C_LDAP   __emit__ (0xEB,0x03,0xD6,0xD6,0xFF);
	#define NANOBEGIN     __emit__ (0xEB,0x03,0xD6,0xD7,0x01);
	#define NANOEND       __emit__ (0xEB,0x03,0xD6,0xD7,0x00);
	*/
#elif defined(__LCC__)
	/* Provided by Rubem Pechansky, 26Feb2003 */
	#define SECUREBEGIN   _asm(".byte 0xEB,0x03,0xD6,0xD6,0x00");
	#define SECUREEND     _asm(".byte 0xEB,0x03,0xD6,0xD6,0xFF");
	#define SECUREBEGIN_A_FULL _asm(".byte 0xEB,0x03,0xD6,0xD6,0x01");
	#define SECUREEND_A_FULL   _asm(".byte 0xEB,0x03,0xD6,0xD6,0xFF");
	#define SECUREBEGIN_B_GUEST _asm(".byte 0xEB,0x03,0xD6,0xD6,0x02");
	#define SECUREEND_B_GUEST   _asm(".byte 0xEB,0x03,0xD6,0xD6,0xFF");
	#define SECUREBEGIN_C_LDAP _asm(".byte 0xEB,0x03,0xD6,0xD6,0x03");
	#define SECUREEND_C_LDAP   _asm(".byte 0xEB,0x03,0xD6,0xD6,0xFF");
	#define SECUREBEGIN_D_ROLE _asm(".byte 0xEB,0x03,0xD6,0xD6,0x04");
	#define SECUREEND_D_ROLE   _asm(".byte 0xEB,0x03,0xD6,0xD6,0xFF");
	#define SECUREBEGIN_E_ENTERPRISE _asm(".byte 0xEB,0x03,0xD6,0xD6,0x05");
	#define SECUREEND_E_ENTERPRISE   _asm(".byte 0xEB,0x03,0xD6,0xD6,0xFF");
	#define SECUREBEGIN_F_MGATEWAY _asm(".byte 0xEB,0x03,0xD6,0xD6,0x06");
	#define SECUREEND_F_MGATEWAY   _asm(".byte 0xEB,0x03,0xD6,0xD6,0xFF");
	#define SECUREBEGIN_G_WEBRTC _asm(".byte 0xEB,0x03,0xD6,0xD6,0x07");
	#define SECUREEND_G_WEBRTC   _asm(".byte 0xEB,0x03,0xD6,0xD6,0xFF");
	#define SECUREBEGIN_H _asm(".byte 0xEB,0x03,0xD6,0xD6,0x08");
	#define SECUREEND_H   _asm(".byte 0xEB,0x03,0xD6,0xD6,0xFF");
	#define SECUREBEGIN_I _asm(".byte 0xEB,0x03,0xD6,0xD6,0x09");
	#define SECUREEND_I   _asm(".byte 0xEB,0x03,0xD6,0xD6,0xFF");
	#define SECUREBEGIN_J _asm(".byte 0xEB,0x03,0xD6,0xD6,0x0A");
	#define SECUREEND_J   _asm(".byte 0xEB,0x03,0xD6,0xD6,0xFF");
	#define SECUREBEGIN_K _asm(".byte 0xEB,0x03,0xD6,0xD6,0x0B");
	#define SECUREEND_K   _asm(".byte 0xEB,0x03,0xD6,0xD6,0xFF");
	#define NANOBEGIN     _asm(".byte 0xEB,0x03,0xD6,0xD7,0x01");
	#define NANOEND       _asm(".byte 0xEB,0x03,0xD6,0xD7,0x00");
#else
	#define SECUREBEGIN				 __asm{ __asm _emit 0xEB __asm _emit 0x03 __asm _emit 0xD6 __asm _emit 0xD6 __asm _emit 0x00 } {
	#define SECUREEND				} __asm{ __asm _emit 0xEB __asm _emit 0x03 __asm _emit 0xD6 __asm _emit 0xD6 __asm _emit 0xFF }
	#define SECUREBEGIN_A_FULL		__asm{ __asm _emit 0xEB __asm _emit 0x03 __asm _emit 0xD6 __asm _emit 0xD6 __asm _emit 0x01 } {
	#define SECUREEND_A_FULL		} __asm{ __asm _emit 0xEB __asm _emit 0x03 __asm _emit 0xD6 __asm _emit 0xD6 __asm _emit 0xFF }
	#define SECUREBEGIN_B_GUEST 	__asm{ __asm _emit 0xEB __asm _emit 0x03 __asm _emit 0xD6 __asm _emit 0xD6 __asm _emit 0x02 } {
	#define SECUREEND_B_GUEST   	} __asm{ __asm _emit 0xEB __asm _emit 0x03 __asm _emit 0xD6 __asm _emit 0xD6 __asm _emit 0xFF }
	#define SECUREBEGIN_C_LDAP		__asm{ __asm _emit 0xEB __asm _emit 0x03 __asm _emit 0xD6 __asm _emit 0xD6 __asm _emit 0x03 } {
	#define SECUREEND_C_LDAP		} __asm{ __asm _emit 0xEB __asm _emit 0x03 __asm _emit 0xD6 __asm _emit 0xD6 __asm _emit 0xFF }
	#define SECUREBEGIN_D_ROLE		__asm{ __asm _emit 0xEB __asm _emit 0x03 __asm _emit 0xD6 __asm _emit 0xD6 __asm _emit 0x04 } {
	#define SECUREEND_D_ROLE		} __asm{ __asm _emit 0xEB __asm _emit 0x03 __asm _emit 0xD6 __asm _emit 0xD6 __asm _emit 0xFF }
	#define SECUREBEGIN_E_ENTERPRISE __asm{ __asm _emit 0xEB __asm _emit 0x03 __asm _emit 0xD6 __asm _emit 0xD6 __asm _emit 0x05 } {
	#define SECUREEND_E_ENTERPRISE   } __asm{ __asm _emit 0xEB __asm _emit 0x03 __asm _emit 0xD6 __asm _emit 0xD6 __asm _emit 0xFF }
	#define SECUREBEGIN_F_MGATEWAY	__asm{ __asm _emit 0xEB __asm _emit 0x03 __asm _emit 0xD6 __asm _emit 0xD6 __asm _emit 0x06 } {
	#define SECUREEND_F_MGATEWAY		} __asm{ __asm _emit 0xEB __asm _emit 0x03 __asm _emit 0xD6 __asm _emit 0xD6 __asm _emit 0xFF }
	#define SECUREBEGIN_G_WEBRTC			__asm{ __asm _emit 0xEB __asm _emit 0x03 __asm _emit 0xD6 __asm _emit 0xD6 __asm _emit 0x07 } {
	#define SECUREEND_G_WEBRTC				} __asm{ __asm _emit 0xEB __asm _emit 0x03 __asm _emit 0xD6 __asm _emit 0xD6 __asm _emit 0xFF }
	#define SECUREBEGIN_H			__asm{ __asm _emit 0xEB __asm _emit 0x03 __asm _emit 0xD6 __asm _emit 0xD6 __asm _emit 0x08 } {
	#define SECUREEND_H				} __asm{ __asm _emit 0xEB __asm _emit 0x03 __asm _emit 0xD6 __asm _emit 0xD6 __asm _emit 0xFF }
	#define SECUREBEGIN_I			__asm{ __asm _emit 0xEB __asm _emit 0x03 __asm _emit 0xD6 __asm _emit 0xD6 __asm _emit 0x09 } {
	#define SECUREEND_I				} __asm{ __asm _emit 0xEB __asm _emit 0x03 __asm _emit 0xD6 __asm _emit 0xD6 __asm _emit 0xFF }
	#define SECUREBEGIN_J			__asm{ __asm _emit 0xEB __asm _emit 0x03 __asm _emit 0xD6 __asm _emit 0xD6 __asm _emit 0x0A } {
	#define SECUREEND_J				} __asm{ __asm _emit 0xEB __asm _emit 0x03 __asm _emit 0xD6 __asm _emit 0xD6 __asm _emit 0xFF }
	#define SECUREBEGIN_K			__asm{ __asm _emit 0xEB __asm _emit 0x03 __asm _emit 0xD6 __asm _emit 0xD6 __asm _emit 0x0B } {
	#define SECUREEND_K				} __asm{ __asm _emit 0xEB __asm _emit 0x03 __asm _emit 0xD6 __asm _emit 0xD6 __asm _emit 0xFF }
//  Valid nanomites
	#define NANOBEGIN2				__asm{ __asm _emit 0xEB __asm _emit 0x03 __asm _emit 0xD6 __asm _emit 0xD7 __asm _emit 0x01 } {
	#define NANOEND2				} __asm{ __asm _emit 0xEB __asm _emit 0x03 __asm _emit 0xD6 __asm _emit 0xD7 __asm _emit 0x00 }
//  Invalid nanomites
	#define NANOBEGIN	;
	#define NANOEND		;
#endif
