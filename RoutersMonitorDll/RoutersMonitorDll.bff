#once

{
	.ProjectName = 'RoutersMonitorDll'
	^AllProjects + .ProjectName

	.ProjectPath = '$RepoPath_TC3$/$ProjectName$'
	.TargetName = 'vs_rm$DLLSuffix$'

	.ExtraDefinitions
		+ 'ROUTERSMONITORDLL_EXPORTS'
	.SourcePath = .ProjectPath

	.ExternalLibraries_Link
		+ 'cppdb_postgres'
		+ 'boost'
		+ 'openssl'
	.ProjectConfigs = {}

#if __WINDOWS__
	.ExtraLinkerOptions
		+ ' /DYNAMICBASE:NO'
		+ ' Advapi32.lib'
		+ ' Crypt32.lib'
		+ ' Gdi32.lib'
		+ ' User32.lib'
		+ ' Winmm.lib'
		+ ' Ws2_32.lib'
		+ ' wsock32.lib'
#endif

	ForEach(.Cfg in .Configs)
	{
		Using(.Cfg)
#include "../common/fbuild/update_config.bff"

#include "../common/fbuild/gen_def_objlist.bff"
#include "../common/fbuild/gen_def_resource.bff"
		Alias('Compile-$ProjectName$-$Toolchain$-$Platform$-$Config$-$Trait$') { .Targets = .LibrarianAdditionalInputs }

		DLL('$ProjectName$-$Toolchain$-$Platform$-$Config$-$Trait$-DLL')
		{
			.Libraries
				+ 'acs-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'net-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'SecureLib-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'std-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'std-generic-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'streams-$Toolchain$-$Platform$-$Config$-$Trait$'
#if __WINDOWS__
			.LinkerOptions + ' /DLL /SUBSYSTEM:CONSOLE,$LinkerSubsystemVersion$'
#endif
			.LinkerOptions
				+ .LinkerOptionsEnd
			Using(."LinkerStamp_$Config$")
			.LinkerStampExeArgs + ' "$LinkerOutput$"'
		}
		Alias('$ProjectName$-$Toolchain$-$Platform$-$Config$-$Trait$') { .Targets = '$ProjectName$-$Toolchain$-$Platform$-$Config$-$Trait$-DLL' }
	}

#include "../common/fbuild/gen_project_aliases.bff"

	.ProjectGuid = '{E86F4535-D389-4B5C-95A1-B73A5367CFAA}'
#include "../common/fbuild/gen_ide_project.bff"
}
