#once

{
	.ProjectName = 'VCS_v2'
	^AllProjects + .ProjectName

	.ProjectPath = '$RepoPath_TC3$/$ProjectName$'
	.TargetName = 'tc_server_v2$EXESuffix$'

	.SourcePath = .ProjectPath

	.ExternalLibraries_Use
		+ 'boost'
		+ 'openldap'
		+ 'openssl'
	.ExternalLibraries_Link
		+ 'webrtc'
		+ 'libtorrent'
		+ 'cppdb_postgres'
		+ 'boost'
		+ 'curl'
		+ 'cares'
		+ 'sqlite'
		+ 'openldap'
		+ 'openssl'
		+ 'ipp'
	.ProjectConfigs = {}

#if __WINDOWS__
	.ExtraLinkerOptions
		+ ' /DYNAMICBASE:NO'
		+ ' /MANIFESTUAC:level=requireAdministrator'
		+ ' Advapi32.lib'
		+ ' Crypt32.lib'
		+ ' comsuppw.lib'
		+ ' dnsapi.lib'
		+ ' Gdi32.lib'
		+ ' pdh.lib'
		+ ' Secur32.lib'
		+ ' Shell32.lib'
		+ ' Shlwapi.lib'
		+ ' User32.lib'
		+ ' Wininet.lib'
		+ ' Winmm.lib'
		+ ' wldap32.lib'
		+ ' Ws2_32.lib'
		+ ' wsock32.lib'
	.ExtraLinkerOptions_Release
		+ ' /MAP' // VMProtect works better with .map files
#endif
#if __LINUX__
	.ExtraLinkerOptions_Release
		+ ' -lVMProtectSDK'
		+ ' -Wl,-rpath=^$ORIGIN'
#endif

	ForEach(.Cfg in .Configs)
	{
		Using(.Cfg)
#include "../common/fbuild/update_config.bff"

#include "../common/fbuild/gen_def_objlist.bff"
		Alias('Compile-$ProjectName$-$Toolchain$-$Platform$-$Config$-$Trait$') { .Targets = .LibrarianAdditionalInputs }

		Executable('$ProjectName$-$Toolchain$-$Platform$-$Config$-$Trait$-EXE')
		{
			.Libraries
				+ 'acs_v2-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'AppServices-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'BaseServices-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'Bwt-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'chatlib-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'CheckSrv_v2-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'FakeClient-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'H323Lib-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'IppLib2-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'JPEGUtils-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'http-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'http_v2-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'ldap_core-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'LicenseLib-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'TransceiverLib-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'TransceiverLib_v2-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'WebSocket-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'WebSocket_v2-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'lualib-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'MediaParserLib-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'net-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'newtransport-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'ProtectionLib-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'Server-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'SecureLib-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'ServerServices-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'SIPParserBase-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'statuslib-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'std-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'std-generic-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'streams-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'streams_v2-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'SIPParserLib-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'Server-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'transport-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'TrueGateway-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'VCSServices-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'Watchdog-$Toolchain$-$Platform$-$Config$-$Trait$'

#if  __WINDOWS__ ; just to build on Windows
				+ 'acs-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'MediaParserLib-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'SmtpMailer-$Toolchain$-$Platform$-$Config$-$Trait$'
				+ 'WinFirewallManager-$Toolchain$-$Platform$-$Config$-$Trait$'
#endif
				+ 'FileTransfer-$Toolchain$-$Platform$-$Config$-$Trait$'

#if __WINDOWS__
			.LinkerOptions + ' /SUBSYSTEM:CONSOLE,$LinkerSubsystemVersion$'
#endif
			.LinkerOptions
				+ .LinkerOptionsEnd
			Using(."LinkerStamp_$Config$")
			.LinkerStampExeArgs + ' "$LinkerOutput$"'

			// Technically this is a run-time dependency, not a pre-build dependency. But FASTBuild doesn't have them.
			.PreBuildDependencies = {}
				+ 'VMProtectSDK-$Toolchain$-$Platform$-$Config$-$Trait$'
		}
		Alias('$ProjectName$-$Toolchain$-$Platform$-$Config$-$Trait$') { .Targets = '$ProjectName$-$Toolchain$-$Platform$-$Config$-$Trait$-EXE' }
	}

#include "../common/fbuild/gen_project_aliases.bff"

#include "../common/fbuild/gen_ide_project.bff"
}
